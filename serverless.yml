service: omni-pb-wt-milestone-updates

provider:
  name: aws
  region: ${opt:region, 'us-east-1'}
  stage: ${opt:stage, 'dev'}
  versionFunctions: false
  tags: ${self:custom.tags}
  stackTags: ${self:custom.tags}
  runtime: nodejs20.x
  deploymentBucket:
    name: ${ssm:/omni-dw/${self:provider.stage}/sls/deployment/bucket}
    serverSideEncryption: AES256
  vpc:
    securityGroupIds:
      - ${ssm:/omni-dw/${self:provider.stage}/lambda/sgId}
    subnetIds:
      - ${ssm:/omni-dw/${self:provider.stage}/lambda/subnetA}
  environment:
    ERROR_SNS_TOPIC_ARN: ${ssm:/omni-pb-rt/${self:provider.stage}/error-notification/arn}
    REGION: ${opt:region, 'us-east-1'}
    CONSIGNEE_TABLE: ${ssm:/omni-wt-rt-updates/${self:provider.stage}/consignee/ddb.tableName}
    CONFIRMATION_COST: ${ssm:/omni-wt-rt-updates/${self:provider.stage}/confirmation-cost/ddb.tableName}
    CONFIRMATION_COST_INDEX_KEY_NAME: ${ssm:/omni-wt-rt-updates/${self:provider.stage}/confirmation-cost/ddb.orderNoIndex}
    ADDRESS_MAPPING_G_API_KEY: ${ssm:/omni-ivia/${self:provider.stage}/google/api.Key}
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - logs:CreateLogGroup
        - logs:CreateLogStream
        - logs:PutLogEvents
        - ec2:CreateNetworkInterface
        - ec2:DescribeNetworkInterfaces
        - ec2:DetachNetworkInterface
        - ec2:DeleteNetworkInterface
        - ec2:AssignPrivateIpAddresses
        - ec2:UnassignPrivateIpAddresses
        - sqs:GetQueueUrl
        - sqs:GetQueueAttributes
        - sqs:ReceiveMessage
        - sqs:DeleteMessage
        - sqs:SendMessageBatch
        - sqs:SendMessage
        - secretsmanager:*
        - sns:*
        - ses:*
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:GetItem
        - dynamodb:Query
        - dynamodb:DeleteItem
        - dynamodb:Scan
        - logs:DescribeLogStreams
      Resource: '*'

custom:
  region: ${opt:region, 'us-east-1'}
  stage: ${opt:stage, 'dev'}
  tags:
    Application: WT-PB Integration
    CreateBy: BizCloudExperts
    Environment: ${self:custom.stage}

layers:
  NodeModules:
    path: lambdaLayer/lib
    name: ${self:service}-layer-${self:provider.stage}
    description: Lambda layer for all node modules - ${self:provider.stage}
    compatibleRuntimes:
      - nodejs20.x
    retain: false

plugins:
  - serverless-offline
  - serverless-step-functions

package:
  individually: true

functions:
  omni-pb-rt-movement-stream-processor: ${file(config/functions/omni-pb-rt-movement-stream-processor.yml):function}
  omni-pb-rt-stop-db-stream-processor: ${file(config/functions/omni-pb-rt-stop-db-stream-processor.yml):function}
  omni-pb-add-milestone: ${file(config/functions/omni-pb-add-milestone.yml):function}
  omni-pb-pod-upload: ${file(config/functions/omni-pb-pod-upload.yml):function}
  omni-pb-location-update: ${file(config/functions/omni-pb-location-update.yml):function}
  omni-pb-finalise-cost: ${file(config/functions/omni-pb-wt-finalise-cost.yml):function}
